---
version: "3"

services:
  prometheus:
    image: prom/prometheus:v3.6.0-rc.0
    container_name: prometheus
    expose:
      - "9090"
    volumes:
      - $PWD/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:12.2.0-17449462949-ubuntu
    restart: unless-stopped
    container_name: grafana
    depends_on:
      - prometheus
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - $PWD/grafana:/etc/grafana/provisioning/datasources
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  caddy:
    build:
      context: $PWD/caddy
      dockerfile: Containerfile
    restart: unless-stopped
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "2019"  # expose port for /metrics for Prometheus
    volumes:
      - $PWD/caddy/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/caddy/caddy_data:/data
      - $PWD/caddy/caddy_config:/config
      - $PWD/htmx/static:/app/static:ro  # Caddy serves assets directly
      - $PWD/caddy/certs/cloudflare-origin-root-domain.crt:/etc/ssl/cloudflare-root.crt:ro
      - $PWD/caddy/certs/cloudflare-origin-root-domain.key:/etc/ssl/cloudflare-root.key:ro
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - ACME_ACCOUNT=${ACME_ACCOUNT}
    depends_on:
      htmx-server:
        condition: service_healthy
      grafana:
        condition: service_healthy
      prometheus:
        condition: service_healthy

  htmx-server:
    build:
      context: $PWD/htmx
      dockerfile: Containerfile
    container_name: htmx-portfolio
    expose:
      - "8080"
    depends_on:
      - prometheus
      - grafana
    environment:
      - SMTP_KEY=${SMTP_KEY}
      - SMTP_EMAIL=${SMTP_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - FROM_EMAIL=${FROM_EMAIL}
      - TO_EMAIL=${TO_EMAIL}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  caddy_data:
  caddy_config:
